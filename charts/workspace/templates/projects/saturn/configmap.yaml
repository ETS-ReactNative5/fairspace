apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "saturn.fullname" . }}
  labels:
    app: saturn
    chart: {{ template "workspace.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  application.yaml: |-
    port: 8080
    publicUrl: {{ template "workspace.url" . }}
    jena:
      metadataBaseIRI: http://{{ template "mercury.hostname" . }}/iri/
      vocabularyBaseIRI: http://{{ template "mercury.hostname" . }}/vocabulary/
      datasetPath: "/data/saturn/db"
      inactiveConnectionShutdownIntervalSec: 600
      storeParams:
{{ toYaml .Values.saturn.storeParams | indent 8 }}
      transactionLogPath: "/data/saturn/files/log"
      maxTriplesToReturn: {{ .Values.saturn.maxTriplesToReturn }}
      elasticSearch:
        enabled: {{ .Values.external.elasticsearch.enabled }}
        required: true
        settings:
          hostToPortMapping:
            {{ .Values.external.elasticsearch.transport.host }}: {{ .Values.external.elasticsearch.transport.port }}
          clusterName: "elasticsearch"
          shards: 1
          replicas: 1
          indexName: "{{ .Values.external.elasticsearch.indexName }}"
    auth:
      enabled: true
      jwksUrl: {{ template "keycloak.baseUrl" . }}/auth/realms/{{ .Values.external.keycloak.realm }}/protocol/openid-connect/certs
      jwtAlgorithm: "RS256"
      fullAccessRole: "{{ template "workspace.roles.coordinator" . }}"
    webDAV:
      blobStorePath: "/data/saturn/files/blobs"
    workspace:
      id: "{{ .Release.Name }}"
      name: "{{ .Values.workspace.name }}"
      version: "{{ .Chart.Version }}"
    rabbitMQ:
      enabled: {{ .Values.rabbitmq.enabled }}
      required: {{ .Values.rabbitmq.required }}
      host: {{ .Values.external.rabbitmq.host }}
      username: {{ .Values.rabbitmq.username }}
      password: {{ .Values.rabbitmq.password }}
    mail:
{{ toYaml .Values.saturn.mail | indent 6 }}

