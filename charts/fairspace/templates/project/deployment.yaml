apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name }}
  labels:
    app: {{ template "fairspace.name" . }}
    {{- include "fairspace.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0%
      maxUnavailable: 100%
  selector:
    matchLabels:
      app: fairspace
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: fairspace
        release: {{ .Release.Name }}
{{- if .Values.podAnnotations.fairspace }}
      annotations:
{{ toYaml .Values.podAnnotations.fairspace | indent 8 }}
{{- end }}
    spec:
      containers:
        - name: {{ .Release.Name }}-pluto
          image: "{{ .Values.pluto.image.image }}:{{ .Values.pluto.image.tag }}"
          imagePullPolicy: {{ .Values.pluto.image.pullPolicy }}
          ports:
            - containerPort: 8080
          env:
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-oauth-client"
                  key: clientSecret
          volumeMounts:
            - name: config-volume-pluto
              mountPath: /opt/config
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: {{ .Values.pluto.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.pluto.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.pluto.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.pluto.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path:  /actuator/health
              port: 8080
            periodSeconds: {{ .Values.pluto.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.pluto.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.pluto.readinessProbe.timeoutSeconds }}
          resources:
{{ toYaml .Values.pluto.resources | indent 12 }}
        - name: {{ .Release.Name }}-saturn
          image: "{{ .Values.saturn.image.image }}:{{ .Values.saturn.image.tag }}"
          imagePullPolicy: {{ .Values.saturn.image.pullPolicy }}
          ports:
            - containerPort: 8090
          env:
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-oauth-client"
                  key: clientSecret
            - name: AUDIT_LOG_ROOT
              value: /data/saturn/audit
{{- if .Values.saturn.loglevel }}
            - name: LOG_LEVEL
              value: {{ .Values.saturn.loglevel | quote }}
{{- end }}
          volumeMounts:
            - name: config-volume-saturn
              mountPath: /opt/config
            - name: database
              mountPath: /data/saturn/db
            - name: files
              mountPath: /data/saturn/files
            - name: audit
              mountPath: /data/saturn/audit
          livenessProbe:
            httpGet:
              path:  /api/health/
              port: 8090
            initialDelaySeconds: {{ .Values.saturn.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.saturn.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.saturn.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.saturn.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path:  /api/health/
              port: 8090
            periodSeconds: {{ .Values.saturn.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.saturn.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.saturn.readinessProbe.timeoutSeconds }}
          resources:
{{ toYaml .Values.saturn.resources | indent 12 }}
      volumes:
      - name: config-volume-saturn
        configMap:
          name: {{ .Release.Name }}-saturn
      - name: config-volume-pluto
        configMap:
          name: {{ .Release.Name }}-pluto
      - name: database
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-saturn-database
      - name: files
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-saturn-files
      - name: audit
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-saturn-audit
