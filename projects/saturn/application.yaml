# Application's port
port: 8080
publicUrl: http://localhost:8080
elasticsearchUrl: http://localhost:9200
jena:
  # Base IRI for all metadata entities
  metadataBaseIRI: "http://localhost/iri/"
  # Jena's TDB2 database path
  datasetPath: "data/db"
  storeParams:
    tdb.file_mode: "mapped"
    tdb.block_size: 8192
    tdb.block_read_cache_size: 5000
    tdb.block_write_cache_size: 1000
    tdb.node2nodeid_cache_size: 200000
    tdb.nodeid2node_cache_size: 750000
    tdb.node_miss_cache_size: 1000
    tdb.nodetable: "nodes"
    tdb.triple_index_primary: "SPO"
    tdb.triple_indexes:
      - "SPO"
      - "POS"
      - "OSP"
    tdb.quad_index_primary: "GSPO"
    tdb.quad_indexes:
      - "GSPO"
      - "GPOS"
      - "GOSP"
      - "POSG"
      - "OSPG"
      - "SPOG"
    tdb.prefixtable: "prefixes"
    tdb.prefix_index_primary: "GPU"
    tdb.prefix_indexes:
      - "GPU"
  # Path of the transaction log
  transactionLogPath: "data/log"
  bulkTransactions: true
  elasticSearch:
    settings:
      # Map of hosts and ports. The host could also be an IP Address
      hostToPortMapping:
        "127.0.0.1": 9300
      # Name of the Cluster. Defaults to "elasticsearch". Set to "docker-cluster" for a dockerized ES setup.
      clusterName: "docker-cluster"
      # Number of shards. Defaults to 1
      shards: 1
      # Number of replicas. Defaults to 1
      replicas: 1
    advancedSettings:
auth:
  authServerUrl: http://localhost:5100/auth/
  realm: fairspace
  clientId: workspace-client
  enableBasicAuth: true
  superAdminUser: organisation-admin
webDAV:
  # Path of the WebDAV's local blob store
  blobStorePath: "data/blobs"
mail:
  mail.from: info@fairspace.com
  mail.user: user
  mail.password: password
  mail.transport.protocol: smtp
  mail.smtp.auth: true
  mail.smtp.host: host
  mail.smtp.port: 587
  mail.smtp.starttls.enable: true
services:
  jupyterhub: https://jupyter.org/hub#
  cbioportal: https://www.cbioportal.org
  "test username": http://google.com?q=${username}
features:
  - MetadataEditing
inheritableFileAttributesQuery: |
  PREFIX curie: <https://institut-curie.org/ontology#>

  SELECT DISTINCT ?p ?o WHERE {
    {
      # File properties
      SELECT ?p ?o WHERE {
         ?s ?p ?o .
         FILTER (?p IN (curie:analysisType))
      }
    } UNION {
      # Sample properties
      SELECT ?p ?o WHERE {
         ?s curie:sample/curie:isChildOf* ?sample .
         ?sample ?p ?o .
         FILTER (?p IN (curie:hasOrigin, curie:sampleTopography, curie:isOfNature, curie:tumorCellularity, curie:collectDate))
      }
    } UNION {
      # TPE Properties
      SELECT ?p ?o WHERE {
        ?s curie:aboutEvent/curie:isLinkedTo* ?event .
        ?event ?p ?o .
        FILTER (?p IN (curie:tumorTopography, curie:tumorMorphology, curie:tumorLaterality, curie:eventType,
           curie:diagnosisDate, curie:ageAtDiagnosis, curie:tumorGradeType, curie:tumorGradeValue,
           curie:tnmType, curie:tnmT, curie:tnmN, curie:tnmM))
      }
    } UNION {
      # Subject properties
      SELECT ?p ?o WHERE {
          ?s curie:aboutSubject|(curie:sample/curie:isChildOf*/curie:subject)|(curie:aboutEvent/curie:isLinkedTo*/curie:eventSubject) ?subject .
          ?subject ?p ?o .
          FILTER (?p IN (curie:isOfGender, curie:isOfSpecies, curie:ageAtLastNews, curie:ageAtDeath))
      }
    }
  }
